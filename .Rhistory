blogdown::serve_site()
library(blogdown)
blogdown::serve_site()
blogdown::serve_site()
git config --global --edit
blogdown::serve_site()
blogdown::serve_site()
hugo version
blogdown::install_hugo()
blogdown::serve_site()
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
library(shiny)
library(shinyBS)
library(ggplot2)
library(mizer)
library(progress)
install.packages("shinyBS")
library(shinyBS)
